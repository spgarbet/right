ce_plane <- function(sum, title) {
dt <- sum
dt$line <- 1
if (any(names(dt) %in% "dominated")==TRUE)
{dt$line[dt$dominated==1] <- 0 }
if (any(names(dt) %in% "ext.dominated")==TRUE)
{dt$line[dt$ext.dominated==1] <- 0}
if (any(names(dt) %in% "Y")==TRUE)
{dt <- dt %>% mutate(label=paste0(preemptive,"-",reactive,"-",X,"-",Y))} # With sensitivity analyses
if (any(names(dt) %in% "Y")==FALSE)
{dt <- dt %>% mutate(label=strategy)}
ggplot(dt, aes(x=dQALY,y=dCOST)) + geom_point() +
geom_line(data=dt[dt$line==1,]) +
geom_label_repel(aes(label=label)) +
ggtitle(title) +
xlab("Average Quality Adjusted Life Years") +
ylab("Average Cost")
}
ce_plane(is,"Cost-effectiveness Plane")
View(is)
load("/Users/zilu/Desktop/sens_spec_test.rda")
View(results)
DT <- data.table(results)
print("Summary")
DT[, .N, by = list(resource, preemptive, reactive, sens, spec)]
library(data.table)
DT <- data.table(results)
print("Summary")
DT[, .N, by = list(resource, preemptive, reactive, sens, spec)]
DT <- data.table(results) %>% filter(resource=="time_in_model")
DT[, .N, by = list(resource, preemptive, reactive, sens, spec)]
load("/Users/zilu/Desktop/results_sum_s10.rda")
View(summary)
library(data.table)
library(plyr)
library(dplyr)
library(tidyr)
library(reshape2)
summary <- summary %>% arrange(resource,preemptive, reactive)
write.csv(summary, file="/Users/zilu/Desktop/rerun_s.csv")
setwd("./right-simulation")
library(data.table)
library(plyr)
library(dplyr)
library(tidyr)
library(reshape2)
cs <- data.frame(strategy=NA,dQALY=0,dCOST=0)
cs[1,] <- c("None", 8.03866	,	1591.76)
cs[2,] <- c("Reactive Single", 8.03965	,	1689.66)
cs[3,] <- c("Reactive Panel"	,	8.03968	,	1763.25)
cs[4,] <- c("Universal Preemptive Panel"	,8.03979	,	1883.5)
cs[5,] <- c("Targeted Preemptive Panel"	,8.03931	,	1672.13)
cs$dCOST <- as.numeric(cs$dCOST)
cs$dQALY <- as.numeric(cs$dQALY)
is <- icer(cs)
ce_plane <- function(sum, title) {
dt <- sum
dt$line <- 1
if (any(names(dt) %in% "dominated")==TRUE)
{dt$line[dt$dominated==1] <- 0 }
if (any(names(dt) %in% "ext.dominated")==TRUE)
{dt$line[dt$ext.dominated==1] <- 0}
if (any(names(dt) %in% "Y")==TRUE)
{dt <- dt %>% mutate(label=paste0(preemptive,"-",reactive,"-",X,"-",Y))} # With sensitivity analyses
if (any(names(dt) %in% "Y")==FALSE)
{dt <- dt %>% mutate(label=strategy)}
ggplot(dt, aes(x=dQALY,y=dCOST)) + geom_point() +
geom_line(data=dt[dt$line==1,]) +
geom_label_repel(aes(label=label)) +
ggtitle(title) +
xlab("Average Quality Adjusted Life Years") +
ylab("Average Cost")
}
ce_plane(is,"Cost-effectiveness Plane")
#######ICER & C/E Plane
library(ggplot2)
library(ggrepel)
library(dplyr)
library(tidyr)
icer <- function(results)
{
x <- results %>% arrange(dCOST) %>% mutate(ICER = (lag(dCOST)-dCOST)/(lag(dQALY)-dQALY))
#strong dominance (cross out strategies with a negative ICER)
str.dom <- NULL
if(any(x$ICER[-1]<0)==FALSE) {
x$dominated[2:(nrow(x))] = 0
}
while(any(x$ICER[-1]<0))
{
y <- x %>% filter(ICER<0)
x <- x %>% filter(ICER>0 | is.na(ICER)) %>% arrange(dCOST) %>% mutate(ICER = (dCOST-lag(dCOST))/(dQALY-lag(dQALY)))
x$dominated[2:(nrow(x))] = 0
str.dom <- rbind.fill(str.dom, y)
}
if(is.null(str.dom)==FALSE) {str.dom <- str.dom %>% mutate(ICER=NA, dominated=1)}
#extended dominance (cross out weakly dominated strategies until ICERs always increase with costs)
ext.dom <- NULL
while(any(order(x$ICER[-1])!=1:(nrow(x)-1)))
{
r <- nrow(x)
x$ext.dominated <- NA
for (i in 2:(r-1)) {
x$ext.dominated[i] = as.integer(x$ICER[i] > x$ICER[i+1])
}
y <- x %>% filter(ext.dominated==1)
x <- x %>% filter(ext.dominated==0 | is.na(ext.dominated)) %>% arrange(dCOST) %>% mutate(ICER = (dCOST-lag(dCOST))/(dQALY-lag(dQALY)))
ext.dom <- rbind.fill(ext.dom, y)
}
if(is.null(ext.dom)==FALSE) {ext.dom <- ext.dom %>% mutate(ICER=NA, ext.dominated=1) }
out = plyr::rbind.fill(x, str.dom, ext.dom) %>% arrange(dCOST)
out
}
is <- icer(cs)
View(is)
write.csv(is,file="/Users/zilu/Desktop/icer.csv")
ce_plane <- function(sum, title) {
dt <- sum
dt$line <- 1
if (any(names(dt) %in% "dominated")==TRUE)
{dt$line[dt$dominated==1] <- 0 }
if (any(names(dt) %in% "ext.dominated")==TRUE)
{dt$line[dt$ext.dominated==1] <- 0}
if (any(names(dt) %in% "Y")==TRUE)
{dt <- dt %>% mutate(label=paste0(preemptive,"-",reactive,"-",X,"-",Y))} # With sensitivity analyses
if (any(names(dt) %in% "Y")==FALSE)
{dt <- dt %>% mutate(label=strategy)}
ggplot(dt, aes(x=dQALY,y=dCOST)) + geom_point() +
geom_line(data=dt[dt$line==1,]) +
geom_label_repel(aes(label=label)) +
ggtitle(title) +
xlab("Average Quality Adjusted Life Years") +
ylab("Average Cost")
}
ce_plane(is,"Cost-effectiveness Plane")
load("/Users/zilu/Desktop/results_sum_c10.rda")
View(summary)
summary <- summary %>% arrange(resource,preemptive, reactive)
write.csv(summary, file="/Users/zilu/Desktop/clo_new.csv")
load("/Users/zilu/Desktop/results_sum_w10.rda")
summary <- summary %>% arrange(resource,preemptive, reactive)
write.csv(summary, file="/Users/zilu/Desktop/war_new.csv")
install.packages("MatchIt")
#Matching Analysis for JSY Evaluation
#This code runs the MatchIt packages to produce a dataset matched on the variables we specified.
# Part 1: Load Libraries
library(MASS)
library(Zelig)
library(MatchIt)
library(survey)
my.data<-read.table("/Users/zilu/Desktop/Other/PE_course/CS2-India-rep/dlhs3_for_matching_RESTRICTED.csv", header = T, sep=",")
countries.all<-sort(as.character(unique(my.data$state)))
## the next part just loops through the states in India designated in the state variable, and within each state produce matched observations on the variables specified in line 31
i <- 1
for (x in countries.all) {
x <-countries.all[i]
print(x)
z<-my.data[my.data$state==x,]
matchit.out <- matchit(jsy ~ bpl_card + urban + as.factor(wealthgroup) + as.factor(castegroup) + as.factor(educgroup) + as.factor(nbgroup) + as.factor(agegroup), data=z, method = "exact")
m.data<-match.data(matchit.out, weights="weights")
write.csv(m.data, file=paste("/Users/zilu/Desktop/Other/PE_course/CS2-India-rep/mdata_",x,".csv", sep=""), sep=",", col.names=T, row.names=F, quote=F)
i <- i+1
}
my.data <- read.table("/Users/zilu/Desktop/Other/PE_course/CS2-India-rep/dlhs3_for_matching_RESTRICTED_12_months.csv", header = T, sep=",")
countries.all <- sort(as.character(unique(my.data$state)))
## the next part just loops through the states in India designated in the state variable, and within each state produce matched observations on the variables specified in line 31
i <- 1
for (x in countries.all) {
x <-countries.all[i]
print(x)
z<-my.data[my.data$state==x,]
matchit.out <- matchit(jsy ~ bpl_card + urban + as.factor(wealthgroup) + as.factor(castegroup) + as.factor(educgroup) + as.factor(nbgroup) + as.factor(agegroup), data=z, method = "exact")
m.data<-match.data(matchit.out, weights="weights")
write.csv(m.data, file=paste("/Users/zilu/Desktop/Other/PE_course/CS2-India-rep/mdata_",x,".csv", sep=""), sep=",", col.names=T, row.names=F, quote=F)
i <- i+1
}
View(m.data)
summary(matchit.out)
my.data <- read.table("/Users/zilu/Desktop/Other/PE_course/CS2-India-rep/dlhs3_for_matching_RESTRICTED_12_months.csv", header = T, sep=",")
countries.all <- sort(as.character(unique(my.data$state)))
## the next part just loops through the states in India designated in the state variable, and within each state produce matched observations on the variables specified in line 31
i <- 1
for (x in countries.all) {
x <-countries.all[i]
print(x)
z<-my.data[my.data$state==x,]
matchit.out <- matchit(jsy ~ bpl_card + urban + as.factor(wealthgroup) + as.factor(castegroup) + as.factor(educgroup) + as.factor(nbgroup) + as.factor(agegroup), data=z, method = "exact")
m.data<-match.data(matchit.out, weights="weights")
write.csv(m.data, file=paste("/Users/zilu/Desktop/Other/PE_course/CS2-India-rep/mdata_",x,".csv", sep=""), sep=",", col.names=T, row.names=F, quote=F)
i <- i+1
}
View(m.data)
warnings()
summary(matchit.out)
summary(m.data$weights)
load("/Users/zilu/Desktop/insurance_marketplace/mlr_enrollment.rda")
View(enrollment)
names(enrollment)
load("/Users/zilu/Desktop/results_cs_test.rda")
library(dplyr)
library(data.table)
sum <- data.frame(strategy=c("None","Reactive Single","Reactive Panel","Universal Preemptive Panel","Targeted Preemptive Panel"),
QALY=c(8.03866	,8.03965	,8.03968	,8.03979	,8.03931),
cost=c(1591.76	,1689.66	,1763.25	,1883.5	,1672.13))
View(sum)
library(ggplot2)
geom_abline(intercept = 34,slope=-324)
ggtitle("1") + geom_abline(intercept = 34,slope=-324)
ggplot(sum, aes(x=dQALY,y=dCOST))+geom_abline(intercept = 34,slope=-324)
wtf <- data.frame(wtf=seq(0,100000,100))
View(wtf)
ggplot(data.frame(x=c(0,100000),aes(x))) +
stat_function(fun=function(x) sum$QALY[1]*x+sum$cost[1])
ggplot(data.frame(x=c(0,100000)),aes(x)) +
stat_function(fun=function(x) sum$QALY[1]*x+sum$cost[1])
ggplot(data.frame(x=c(0,100000)),aes(x)) +
stat_function(fun=function(x) sum$QALY[1]*x+sum$cost[1]) +
stat_function(fun=function(x) sum$QALY[2]*x+sum$cost[2]) +
stat_function(fun=function(x) sum$QALY[3]*x+sum$cost[3]) +
stat_function(fun=function(x) sum$QALY[4]*x+sum$cost[4]) +
stat_function(fun=function(x) sum$QALY[5]*x+sum$cost[5]) +
scale_color_manual("Function",value=c("red","orange","yellow","green","black"),breaks=sum$strategy)
ggplot(data.frame(x=c(0,100000)),aes(x)) +
stat_function(fun=function(x) sum$QALY[1]*x+sum$cost[1]) +
stat_function(fun=function(x) sum$QALY[2]*x+sum$cost[2]) +
stat_function(fun=function(x) sum$QALY[3]*x+sum$cost[3]) +
stat_function(fun=function(x) sum$QALY[4]*x+sum$cost[4]) +
stat_function(fun=function(x) sum$QALY[5]*x+sum$cost[5]) +
scale_color_manual("Function",value=c("red","orange","yellow","green","black"),breaks=as.vector(sum$strategy))
as.vector(sum$strategy)
value=c("red","orange","yellow","green","black")
value
class(value)
ggplot(data.frame(x=c(0,100000)),aes(x)) +
stat_function(fun=function(x) sum$QALY[1]*x+sum$cost[1]) +
stat_function(fun=function(x) sum$QALY[2]*x+sum$cost[2]) +
stat_function(fun=function(x) sum$QALY[3]*x+sum$cost[3]) +
stat_function(fun=function(x) sum$QALY[4]*x+sum$cost[4]) +
stat_function(fun=function(x) sum$QALY[5]*x+sum$cost[5]) +
scale_color_manual("Function",value=c("red","orange","yellow","green","black"),breaks=as.character(sum$strategy))
typepf(value)
typeof(value)
breaks=as.vector(sum$strategy)
typeof(breaks)
ggplot(data.frame(x=c(0,100000)),aes(x)) +
stat_function(fun=function(x) sum$QALY[1]*x+sum$cost[1]) +
stat_function(fun=function(x) sum$QALY[2]*x+sum$cost[2]) +
stat_function(fun=function(x) sum$QALY[3]*x+sum$cost[3]) +
stat_function(fun=function(x) sum$QALY[4]*x+sum$cost[4]) +
stat_function(fun=function(x) sum$QALY[5]*x+sum$cost[5]) +
scale_color_manual("Function",value=c("red","orange","yellow","green","black"),breaks=as.vector(sum$strategy))
ggplot(data.frame(x=c(0,100000)),aes(x)) +
stat_function(fun=function(x) sum$QALY[1]*x+sum$cost[1]) +
stat_function(fun=function(x) sum$QALY[2]*x+sum$cost[2]) +
stat_function(fun=function(x) sum$QALY[3]*x+sum$cost[3]) +
stat_function(fun=function(x) sum$QALY[4]*x+sum$cost[4]) +
stat_function(fun=function(x) sum$QALY[5]*x+sum$cost[5]) +
scale_color_manual("Function",value=c("red","orange","yellow","green","black"),breaks=c(1:5))
ggplot(data.frame(x=c(0,100000)),aes(x)) +
stat_function(fun=function(x) sum$QALY[1]*x+sum$cost[1]) +
stat_function(fun=function(x) sum$QALY[2]*x+sum$cost[2]) +
stat_function(fun=function(x) sum$QALY[3]*x+sum$cost[3]) +
stat_function(fun=function(x) sum$QALY[4]*x+sum$cost[4]) +
stat_function(fun=function(x) sum$QALY[5]*x+sum$cost[5]) +
scale_color_manual("Function",value=c("red","orange","yellow","green","black")
stat_function(fun=function(x) sum$QALY[5]*x+sum$cost[5])
ggplot(data.frame(x=c(0,100000)),aes(x)) +
stat_function(fun=function(x) sum$QALY[1]*x+sum$cost[1]) +
stat_function(fun=function(x) sum$QALY[2]*x+sum$cost[2])
sum$QALY[1]
sum$QALY[2]
ggplot(data.frame(x=c(0,100000)),aes(x)) +
stat_function(fun=function(x) sum$QALY[1]*x+sum$cost[1]) +
stat_function(fun=function(x) sum$QALY[2]*x+sum$cost[2]) +
scale_color_manual("Function",value=c("red","orange"))
ggplot(data.frame(x=c(0,100000)),aes(x)) +
stat_function(fun=function(x) sum$QALY[1]*x+sum$cost[1],geom="line",aes(colour=sum$strategy[1])) +
stat_function(fun=function(x) sum$QALY[2]*x+sum$cost[2],geom="line",aes(colour=sum$strategy[2])) +
scale_color_manual("Function",value=c("red","orange"),breaks=c(sum$strategy[1],sum$strategy[2]))
ggplot(data.frame(x=c(0,100000)),aes(x)) +
stat_function(fun=function(x) sum$QALY[1]*x+sum$cost[1],geom="line",aes(colour="s1")) +
stat_function(fun=function(x) sum$QALY[2]*x+sum$cost[2],geom="line",aes(colour="s2")) +
scale_color_manual("Function",value=c("red","orange"),breaks=c("s1","s2"))
ggplot(data.frame(x=c(0,100000)),aes(x)) +
stat_function(fun=function(x) sum$QALY[1]*x+sum$cost[1],geom="line",aes(colour="s1")) +
stat_function(fun=function(x) sum$QALY[2]*x+sum$cost[2],geom="line",aes(colour="s2"))
ggplot(data.frame(x=c(0,100000)),aes(x)) +
stat_function(fun=function(x) sum$QALY[1]*x+sum$cost[1],geom="line",aes(colour="s1")) +
stat_function(fun=function(x) sum$QALY[5]*x+sum$cost[5],geom="line",aes(colour="s2"))
ggplot(data.frame(x=c(10000,100000)),aes(x)) +
stat_function(fun=function(x) sum$QALY[1]*x+sum$cost[1],geom="line",aes(colour="s1")) +
stat_function(fun=function(x) sum$QALY[5]*x+sum$cost[5],geom="line",aes(colour="s2"))
ggplot(data.frame(x=c(10000,70000)),aes(x)) +
stat_function(fun=function(x) sum$QALY[1]*x+sum$cost[1],geom="line",aes(colour="s1")) +
stat_function(fun=function(x) sum$QALY[5]*x+sum$cost[5],geom="line",aes(colour="s2"))
8.03866*10000-1591.76
8.03965*10000-1689.66
ggplot(data.frame(x=c(10000,30000)),aes(x)) +
stat_function(fun=function(x) sum$QALY[1]*x+sum$cost[1],geom="line",aes(colour="s1")) +
stat_function(fun=function(x) sum$QALY[5]*x+sum$cost[5],geom="line",aes(colour="s2"))
ggplot(data.frame(x=c(1000,3000)),aes(x)) +
stat_function(fun=function(x) sum$QALY[1]*x+sum$cost[1],geom="line",aes(colour="s1")) +
stat_function(fun=function(x) sum$QALY[5]*x+sum$cost[5],geom="line",aes(colour="s2"))
ggplot(data.frame(x=c(1000,3000)),aes(x)) +
stat_function(fun=function(x) sum$QALY[1]*x+sum$cost[1],geom="line",aes(colour=1)) +
stat_function(fun=function(x) sum$QALY[2]*x+sum$cost[2],geom="line",aes(colour=2)) +
stat_function(fun=function(x) sum$QALY[3]*x+sum$cost[3],geom="line",aes(colour=3)) +
stat_function(fun=function(x) sum$QALY[4]*x+sum$cost[4],geom="line",aes(colour=4)) +
stat_function(fun=function(x) sum$QALY[5]*x+sum$cost[5],geom="line",aes(colour=5))
ggplot(data.frame(x=c(1000,2000)),aes(x)) +
stat_function(fun=function(x) sum$QALY[1]*x+sum$cost[1],geom="line",aes(colour=1)) +
stat_function(fun=function(x) sum$QALY[2]*x+sum$cost[2],geom="line",aes(colour=2)) +
stat_function(fun=function(x) sum$QALY[3]*x+sum$cost[3],geom="line",aes(colour=3)) +
stat_function(fun=function(x) sum$QALY[4]*x+sum$cost[4],geom="line",aes(colour=4)) +
stat_function(fun=function(x) sum$QALY[5]*x+sum$cost[5],geom="line",aes(colour=5))
wtf <- data.frame(wtf=seq(0,100000,100)) %>%
mutate(nmb1=sum$QALY[1]*wtf-sum$cost[1]) %>%
mutate(nmb2=sum$QALY[2]*wtf-sum$cost[2])
View(wtf)
sum <- sum %>% mutate(NMB1=QALY*10000-cost,NMB2=QALY*50000-cost,NMB3=QALY*100000-cost)
View(sum)
sum
ggplot(data.frame(x=c(9500,100500)),aes(x))
sum <- data.frame(strategy=c("None","Reactive Single","Reactive Panel","Universal Preemptive Panel","Targeted Preemptive Panel"),
QALY=c(8.03866	,8.03965	,8.03968	,8.03979	,8.03931),
cost=c(1591.76	,1689.66	,1763.25	,1883.5	,1672.13))
sum <- sum %>% mutate(NMB1=QALY*10000-cost,NMB2=QALY*50000-cost,NMB3=QALY*100000-cost)
rownames(sum) <- sum$strategy
sum$strategy <- NULL
sum
dt <- t(sum)
dt
sum <- data.frame(strategy=c("None","Reactive Single","Reactive Panel","Universal Preemptive Panel","Targeted Preemptive Panel"),
QALY=c(8.03866	,8.03965	,8.03968	,8.03979	,8.03931),
cost=c(1591.76	,1689.66	,1763.25	,1883.5	,1672.13))
sum <- sum %>% mutate(NMB1=QALY*10000-cost,NMB2=QALY*50000-cost,NMB3=QALY*100000-cost)
rownames(sum) <- sum$strategy
sum <- sum %>% select(NMB1,NMB2,NMB3)
dt <- data.frame(t(sum))
dt
dt <- data.frame(t(sum)) %>% mutate(x=c(10000,50000,100000))
ggplot(dt,aes(x=x))
ggplot(data.frame(x=c(10000,100500)),aes(x)) +
geom_line(sum,aes(x=x,y=sum$NMB1))
dt
ggplot(data.frame(x=c(10000,100500)),aes(x)) +
geom_line(dt,aes(x=x,y=dt$NMB1))
ggplot(data.frame(x=c(10000,100500)),aes(x)) +
geom_line(dt,aes(x=x,y=NMB1))
ggplot(dt,aes(x)) +
geom_line(dt,aes(y=NMB1))
ggplot(dt,aes(x)) +
geom_scatter(dt,aes(y=NMB1))
dt
sum
sum <- data.frame(strategy=c("None","Reactive Single","Reactive Panel","Universal Preemptive Panel","Targeted Preemptive Panel"),
QALY=c(8.03866	,8.03965	,8.03968	,8.03979	,8.03931),
cost=c(1591.76	,1689.66	,1763.25	,1883.5	,1672.13))
sum <- sum %>% mutate(NMB1=QALY*10000-cost,NMB2=QALY*50000-cost,NMB3=QALY*100000-cost)
sum
sum <- data.frame(strategy=c("None","Reactive Single","Reactive Panel","Universal Preemptive Panel","Targeted Preemptive Panel"),
QALY=c(8.03866	,8.03965	,8.03968	,8.03979	,8.03931),
cost=c(1591.76	,1689.66	,1763.25	,1883.5	,1672.13))
st1 <- sum %>% mutate(NMB=QALY*10000-cost,wtf=10000)
st2 <- sum %>% mutate(NMB=QALY*50000-cost,wtf=50000)
st3 <- sum %>% mutate(NMB=QALY*100000-cost,wtf=100000)
dt <- rbind(st1,st2,st3)
dt
ggplot(data=dt,aes(x=wrf,y=nmb,group=strategy)) + geom_line()
ggplot(data=dt,aes(x=wtf,y=nmb,group=strategy)) + geom_line()
ggplot(data=dt,aes(x=wtf,y=NMB,group=strategy)) + geom_line()
ggplot(data=dt,aes(x=wtf,y=NMB,group=strategy)) + geom_line(aes(color=strategy))
ggplot(data=dt,aes(x=wtf,y=NMB,group=strategy)) + geom_jitter(aes(color=strategy))
ggplot(data=dt,aes(x=wtf,y=NMB,group=strategy)) + geom_line(aes(color=strategy))
ggplot(data=dt,aes(x=wtf,y=NMB,group=strategy)) + geom_line(aes(color=strategy),position=position_jitter(w=0.02, h=0))
ggplot(data=dt,aes(x=wtf,y=NMB,group=strategy)) + geom_line(aes(color=strategy),position=position_jitter(w=0.1, h=0))
ggplot(data=dt,aes(x=wtf,y=NMB,group=strategy)) + geom_line(aes(color=strategy),position=position_jitter(w=0.1, h=0.1))
ggplot(data=dt,aes(x=wtf,y=NMB,group=strategy)) + geom_line(aes(color=strategy),position=position_jitter(w=1, h=1))
ggplot(data=dt,aes(x=wtf,y=NMB,group=strategy)) + geom_point(aes(color=strategy),position=position_jitter(w=0.1, h=0.1))
ggplot(data=dt,aes(x=wtf,y=NMB,group=strategy)) + geom_jitter(aes(color=strategy))
#flag: mild/sev myopathy
sum <- data.frame(strategy=c("None","Reactive Single","Reactive Panel","Universal Preemptive Panel","Targeted Pr
sum <- data.frame(strategy=c("None","Reactive Single","Reactive Panel","Universal Preemptive Panel","Targeted Preemptive Panel"),
QALY=c(8.03866	,8.03965	,8.03968	,8.03979	,8.03931),
cost=c(1591.76	,1689.66	,1763.25	,1883.5	,1672.13))
st1 <- sum %>% mutate(NMB=QALY*10000-cost,wtf=10000)
st2 <- sum %>% mutate(NMB=QALY*50000-cost,wtf=50000)
st3 <- sum %>% mutate(NMB=QALY*100000-cost,wtf=100000)
dt <- rbind(st1,st2,st3)
ggplot(data=dt,aes(x=wtf,y=NMB,group=strategy)) + geom_line(aes(color=strategy),position=position_jitter(w=5, h=5))
ggplot(data=dt,aes(x=wtf,y=NMB,group=strategy)) + geom_line(aes(color=strategy),position=position_jitter(w=10, h=10))
ggplot(data=dt,aes(x=wtf,y=NMB,group=strategy)) + geom_point(aes(color=strategy),position=position_jitter(w=0.1, h=0.1))
ggplot(data=dt,aes(x=wtf,y=NMB,group=strategy)) + geom_point(aes(color=strategy),position=position_jitter(w=5, h=5))
ggplot(data=dt,aes(x=wtf,y=NMB,group=strategy)) + geom_jitter(aes(color=strategy))
dt
re <- sum %>% mutate(NMB1=QALY*10000-cost,NMB2=QALY*50000-cost,NMB3=QALY*00000-cost)
re
re <- sum %>% mutate(NMB1=QALY*10000-cost,NMB2=QALY*50000-cost,NMB3=QALY*100000-cost)
re
re <- sum %>% mutate(NMB10k=QALY*10000-cost,NMB50k=QALY*50000-cost,NMB100k=QALY*100000-cost)
re
ce_plane <- function(sum, title) {
dt <- sum
dt$line <- 1
if (any(names(dt) %in% "dominated")==TRUE)
{dt$line[dt$dominated==1] <- 0 }
if (any(names(dt) %in% "ext.dominated")==TRUE)
{dt$line[dt$ext.dominated==1] <- 0}
if (any(names(dt) %in% "Y")==TRUE)
{dt <- dt %>% mutate(label=paste0(preemptive,"-",reactive,"-",X,"-",Y))} # With sensitivity analyses
if (any(names(dt) %in% "Y")==FALSE)
{dt <- dt %>% mutate(label=paste0(preemptive,"-",reactive))}
ggplot(dt, aes(x=dQALY,y=dCOST)) + geom_point() +
geom_line(data=dt[dt$line==1,]) +
geom_label_repel(aes(label=label)) +
ggtitle(title)
}
dt
re
0.045*(1-0.045)/(0.006^2)-1
1194*0.45
1194*0.045
54/1194
beta(1,2)
beta(2,4)
beta(2,4)
beta(2,4)
rbeta(2,4)
rbeta(1,2,4)
rbeta(1,1,2)
rbeta(1,1,2)
rbeta(1,2,4)
rbeta(1,2,4)
rbeta(1,2,4)
rbeta(1,2,4)
t1 <- list()
t1 <- rbeta(100000,1,2)
t2 <- rbeta(100000,2,4)
summary(t1)
summary(t2)
sd(t1)
sd(t2)
rbeta(1000,54,1140)
t0 <- rbeta(1000,54,1140)
sd(t0)
t2 <- rbeta(1000,1,1)
t1 <- rbeta(1000,2,2)
sd(t1)
sd(t2)
mean(t1)
mean(t2)
beta(1,1)==beta(2,2)
beta(1,1)
beta(2,2)
12/45
12/45
29/(29+35+21)
(29+70)/(29+35+21+70+17+3)
12/(12+15+14)
(12+70)/(12+15+14+70+17+3)
(29+35+21+70+17+3)
29+35+21
85*0.73
287+133+44
287+133+44+8
473/0.569
473/832
ori <- c(473, 165, 139, 55)
ori/sum(ori)
ori/sum(ori)*55
new <- ori/sum(ori)*55+ori
new
504.26803+175.90745+148.18870
148.18870/828.3642
new
new/828.3642
0.23*832
191/832
4.5^2
ott <- 29/70
oct <- 35/17
occ <- 21/3
occ/ott
oct/ott
31/17/ott
oct <- 0.45/0.13
oct/ott
oct <- (35+21)/(17+3)
oct/ott
6154/2328
3947/1493
3947.92/1493.68
2328/1493
2328/1493.68
6154/3947.92
1493.68*1.56
1493.68*1.55
1493.68*1.558
1493.68*1.5586
3947.92*1.5586
3947.92*1.55862
3947.92*1.55865
3947.92*1.55867
1.55867*1493.68
3947.92*1.5587
1493.68*1.5587
1237*1.5587
1825*1.5587
2508*40~158
2508*1.5587
4554*1.5587
setwd("/Users/zilu/Desktop/right-simulation")
source("./run_IGNITE.r")
