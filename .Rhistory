{
library(parallel)
N <- inputs$vN
traj <- simulation(env, inputs)
RNGkind("L'Ecuyer-CMRG")
set.seed(s)
mc.reset.stream()
envs <-  mclapply(1:inputs$vNIter,mc.set.seed = TRUE, mc.cores = 8,mc.preschedule=FALSE,function(i) {
env %>% create_counters(counters) %>%
add_generator("patient", traj, at(rep(0, N)), mon=2) %>%
run(365*inputs$vHorizon) %>% # Simulate 100 years.
wrap()
})
envs
}
#RNGkind("L'Ecuyer-CMRG")
# attributes <- arrange(get_mon_attributes(env),name,key,time) %>% mutate(name=paste0(name,"_",replication))
# first.attributes <- spread(attributes %>% group_by(name,key) %>% summarize(first = first(value)),key,first)
# last.attributes <- spread(attributes %>% group_by(name,key) %>% summarize(last = last(value)),key,last)
# all.attributes <- spread(attributes %>% group_by(name,key,time) %>% summarize(first = mean(value)),key,first)
#
# pt = "patient1000_2"
# attributes %>% filter(name==pt) %>% count(key) %>% data.frame()
# events %>% filter(name==pt)
# all.attributes  %>% filter(name==pt)  %>% select(time,contains("CVD"),contains("statin"))
rm(list=ls())
library(parallel)
setwd("/Users/zilu/Desktop/right-simulation")
####
##
# Setup and Run the Simulation.
##
####
# Get Info on Random Patient Who Experiences a Certain Event
source("./right-main-simulation-parallel.R")
vNN = 200
inputs$vNIter = 8
inputs$vN = ceiling(vNN/inputs$vNIter)
inputs$vReactive = "None"
inputs$vPreemptive = "None"
# Run the Simulation
source('./main/event_main_loop.R')
s = 12345
ptm <- proc.time()
sim.run = exec.simulation(s=s)
(timer2 = proc.time() - ptm)
env= sim.run
arrivals <- get_mon_arrivals(env, per_resource = T) %>%  mutate(name = paste0(name,"_",replication))
rm(list=ls())
library(parallel)
setwd("/Users/zilu/Desktop/right-simulation")
####
##
# Setup and Run the Simulation.
##
####
# Get Info on Random Patient Who Experiences a Certain Event
source("./right-main-simulation-parallel.R")
vNN = 200
inputs$vNIter = 8
inputs$vN = ceiling(vNN/inputs$vNIter)
inputs$vReactive = "None"
inputs$vPreemptive = "None"
# Run the Simulation
source('./main/event_main_loop.R')
s = 12345
ptm <- proc.time()
sim.run = exec.simulation(s=s)
(timer2 = proc.time() - ptm)
env= sim.run
arrivals <- get_mon_arrivals(env, per_resource = T) %>%  mutate(name = paste0(name,"_",replication))
rm(list=ls())
library(parallel)
#setwd("/Users/ziluzhou1/Box Sync/today/right-simulation")
setwd("/Users/zilu/Desktop/right-simulation")
source("./analysis/extra-functions.r")
pkg = list("simmer","dplyr","ggplot2","reshape2","tidyr","msm")
invisible(lapply(pkg, require, character.only = TRUE))
####
##
# Set Number of Patients (per iteration)
##
####
vNN = 125
load("./main/cpi.Rdata")
####
##
# Warfarin Only: Baseline
##
####
Scenario.Name = "Baseline"
env  <- simmer(Scenario.Name)
source("./inputs.R")
inputs$vNIter = 8
inputs$vN = vNN
inputs$vUpperAge    = 65
inputs$vLowerAge    = 65
inputs$vHorizon     = 100
inputs$vReactive = "None"
inputs$vPreemptive = "None"
inputs$vDrugs       = list(vSimvastatin = FALSE,
vWarfarin = TRUE,
vClopidogrel = FALSE)
source("./right-main-simulation-parallel.R")
source('./main/event_main_loop.R')
s = 12345
ptm <- proc.time()
env  = exec.simulation(s=s)
arrivals  <- get_mon_arrivals(env, per_resource = T) %>%  mutate(name = paste0(name,"_",replication))
attributes <- arrange(get_mon_attributes(env),name,key,time)
first.attributes <- spread(attributes %>% group_by(name,key) %>% summarize(first = first(value)),key,first)
last.attributes <- spread(attributes %>% group_by(name,key) %>% summarize(last = last(value)),key,last)
#all.attributes <- spread(attributes %>% group_by(name,key,time) %>% summarize(first = mean(value)),key,first)
source("./costs.R")
run.stats = cost.qaly(env,inputs)
events = run.stats[["arrivals"]] %>% arrange(start_time,end_time)
events  %>% filter(name %in% c("patient0_1","patient0_8")) %>% arrange(name)
costs = run.stats[["cost"]]
qaly = run.stats[["qaly"]]
summary = run.stats[["summary"]]
assign(paste0(Scenario.Name,"_sim"),env)
assign(paste0(Scenario.Name,"_events"),events)
assign(paste0(Scenario.Name,"_costs"),costs)
assign(paste0(Scenario.Name,"_qaly"),qaly)
assign(paste0(Scenario.Name,"_summary"),summary)
(timer2 = proc.time() - ptm)
Baseline_events %>% count(resource) %>% data.frame()
Warfarin_Baseline <- cbind(strategy  = "Baseline", Baseline_summary  %>% summarise(dQALY = mean(dQALY), dCOST=mean(dCOST)))
rm(list=ls())
library(parallel)
#setwd("/Users/ziluzhou1/Box Sync/today/right-simulation")
setwd("/Users/zilu/Desktop/right-simulation")
source("./analysis/extra-functions.r")
pkg = list("simmer","dplyr","ggplot2","reshape2","tidyr","msm")
invisible(lapply(pkg, require, character.only = TRUE))
####
##
# Set Number of Patients (per iteration)
##
####
vNN = 1250
load("./main/cpi.Rdata")
####
##
# Warfarin Only: Baseline
##
####
Scenario.Name = "Baseline"
env  <- simmer(Scenario.Name)
source("./inputs.R")
inputs$vNIter = 8
inputs$vN = vNN
inputs$vUpperAge    = 65
inputs$vLowerAge    = 65
inputs$vHorizon     = 100
inputs$vReactive = "None"
inputs$vPreemptive = "None"
inputs$vDrugs       = list(vSimvastatin = FALSE,
vWarfarin = TRUE,
vClopidogrel = FALSE)
source("./right-main-simulation-parallel.R")
source('./main/event_main_loop.R')
s = 12345
ptm <- proc.time()
env  = exec.simulation(s=s)
arrivals  <- get_mon_arrivals(env, per_resource = T) %>%  mutate(name = paste0(name,"_",replication))
attributes <- arrange(get_mon_attributes(env),name,key,time)
first.attributes <- spread(attributes %>% group_by(name,key) %>% summarize(first = first(value)),key,first)
last.attributes <- spread(attributes %>% group_by(name,key) %>% summarize(last = last(value)),key,last)
#all.attributes <- spread(attributes %>% group_by(name,key,time) %>% summarize(first = mean(value)),key,first)
source("./costs.R")
run.stats = cost.qaly(env,inputs)
events = run.stats[["arrivals"]] %>% arrange(start_time,end_time)
events  %>% filter(name %in% c("patient0_1","patient0_8")) %>% arrange(name)
costs = run.stats[["cost"]]
qaly = run.stats[["qaly"]]
summary = run.stats[["summary"]]
assign(paste0(Scenario.Name,"_sim"),env)
assign(paste0(Scenario.Name,"_events"),events)
assign(paste0(Scenario.Name,"_costs"),costs)
assign(paste0(Scenario.Name,"_qaly"),qaly)
assign(paste0(Scenario.Name,"_summary"),summary)
(timer2 = proc.time() - ptm)
Baseline_events %>% count(resource) %>% data.frame()
Warfarin_Baseline <- cbind(strategy  = "Baseline", Baseline_summary  %>% summarise(dQALY = mean(dQALY), dCOST=mean(dCOST)))
View(first.attributes)
table(first.attributes$aInRange)
View(arrivals)
sum(unique(arrivals$name))
length(unique(arrivals$name))
attributes <- arrange(get_mon_attributes(env),name,key,time) %>%  mutate(name = paste0(name,"_",replication))
View(attributes)
first.attributes <- spread(attributes %>% group_by(name,key) %>% summarize(first = first(value)),key,first)
last.attributes <- spread(attributes %>% group_by(name,key) %>% summarize(last = last(value)),key,last)
View(first.attributes)
length(unique(arrivals$name))
table(first.attributes$aInRange)
View(last.attributes)
table(last.attributes$aInRange)
first.attributes %>% filter(aINRInitial==0) %>% summarize()
first.attributes %>% filter(aINRInitial==0) %>% length()
View(first.attributes)
first.attributes <- spread(attributes %>% group_by(name,key) %>% summarize(first = first(value)),key,first) %>% arrange(aINRInitial)
first.attributes <- spread(attributes %>% group_by(name,key) %>% summarize(first = first(value)),key,first)
check <- spread(attributes %>% group_by(name,key) %>% summarize(first = first(value)),key,first) %>% select(aINRInitial, aINR, aInRange) %>% arrange(aINRInitial)
View(check)
check %>% filter(aINRInitial==0) %>% length()
check %>% filter(aINRInitial==0) %>% summarise(N)
check %>% filter(aINRInitial==0) %>% summarise(count)
check %>% filter(aINRInitial==0) %>% summarise(.N)
sum(check$aINRInitial==0)
View(Baseline_events)
View(first.attributes)
nlist <- first.attributes %>% filter(aINRInitial==0) %>% select(name)
View(events)
elist <- events %>% filter(resource=="warfarin_start") %>% select(name)
View(elist)
nlist <- first.attributes %>% filter(aINRInitial==0) %>% select(name, aINRInitial)
elist <- events %>% filter(resource=="warfarin_start") %>% select(name, start_time)
merge(nlist,elist, by="name", all=TURE)
merge(nlist,elist, by="name", all=TRUE)
merge(nlist,elist, by="name", all=TRUE)re <-
re <- merge(nlist,elist, by="name", all=TRUE)
View(re)
elist <- events %>% filter(resource=="warfarin_start") %>% select(name)
nlist <- first.attributes %>% filter(aINRInitial==0) %>% select(name, aINRInitial)
re <- merge(nlist,elist, by="name", all=TRUE) %>% arrange(aINRInitial)
nlist <- first.attributes %>% filter(aINRInitial==0) %>% select(name, aINRInitial) %>% mutate(x=1)
elist <- events %>% filter(resource=="warfarin_start") %>% select(name) %>% mutate(y=1)
re <- merge(nlist,elist, by="name", all=TRUE) %>% arrange(aINRInitial)
inv <- re %>% filter(x==1 & y==1) %>% select(name)
View(inv)
inv <- re %>% filter(x==1 & y==1) %>% select(name) %>% arrange(name)
inv <- re %>% filter(x==1 & y==1) %>% select(name)
inv <- re %>% filter(x==1 & y==1) %>% select(name) %>% mutate(qm = 1)
names(first.attributes)
short <- first.attributes %>% select(name, aAgeInitial, aTimetoWarfarin_AF, aTimetoWarfarin_NonAF, aTimeToStartWarfarin)
View(short)
short <- first.attributes %>% select(name, aAgeInitial, aTimetoWarfarin_AF, aTimetoWarfarin_NonAF, aTimeToStartWarfarin, aSecularDeathTime)
short <- first.attributes %>% select(name, aINRInitial, aTimetoWarfarin_AF, aTimetoWarfarin_NonAF, aTimeToStartWarfarin, aSecularDeathTime)
write.csv(events,file="events.rda")
write.csv(events,file="events.csv")
write.csv(first.attributes,file="first.attributes.csv")
write.csv(last.attributes, file="last.attributes.csv")
events %>% filter(name=="patient981_6")
rm(list=ls())
library(parallel)
#setwd("/Users/ziluzhou1/Box Sync/today/right-simulation")
setwd("/Users/zilu/Desktop/right-simulation")
source("./analysis/extra-functions.r")
pkg = list("simmer","dplyr","ggplot2","reshape2","tidyr","msm")
invisible(lapply(pkg, require, character.only = TRUE))
####
##
# Set Number of Patients (per iteration)
##
####
vNN = 1250
load("./main/cpi.Rdata")
####
##
# Warfarin Only: Baseline
##
####
Scenario.Name = "Baseline"
env  <- simmer(Scenario.Name)
source("./inputs.R")
inputs$vNIter = 8
inputs$vN = vNN
inputs$vUpperAge    = 65
inputs$vLowerAge    = 65
inputs$vHorizon     = 100
inputs$vReactive = "None"
inputs$vPreemptive = "None"
inputs$vDrugs       = list(vSimvastatin = FALSE,
vWarfarin = TRUE,
vClopidogrel = FALSE)
source("./right-main-simulation-parallel.R")
source('./main/event_main_loop.R')
s = 12345
ptm <- proc.time()
env  = exec.simulation(s=s)
arrivals  <- get_mon_arrivals(env, per_resource = T) %>%  mutate(name = paste0(name,"_",replication))
attributes <- arrange(get_mon_attributes(env),name,key,time) %>%  mutate(name = paste0(name,"_",replication))
first.attributes <- spread(attributes %>% group_by(name,key) %>% summarize(first = first(value)),key,first)
last.attributes <- spread(attributes %>% group_by(name,key) %>% summarize(last = last(value)),key,last)
#all.attributes <- spread(attributes %>% group_by(name,key,time) %>% summarize(first = mean(value)),key,first)
source("./costs.R")
run.stats = cost.qaly(env,inputs)
events = run.stats[["arrivals"]] %>% arrange(start_time,end_time)
events  %>% filter(name %in% c("patient0_1","patient0_8")) %>% arrange(name)
costs = run.stats[["cost"]]
qaly = run.stats[["qaly"]]
summary = run.stats[["summary"]]
assign(paste0(Scenario.Name,"_sim"),env)
assign(paste0(Scenario.Name,"_events"),events)
assign(paste0(Scenario.Name,"_costs"),costs)
assign(paste0(Scenario.Name,"_qaly"),qaly)
assign(paste0(Scenario.Name,"_summary"),summary)
(timer2 = proc.time() - ptm)
Baseline_events %>% count(resource) %>% data.frame()
Warfarin_Baseline <- cbind(strategy  = "Baseline", Baseline_summary  %>% summarise(dQALY = mean(dQALY), dCOST=mean(dCOST)))
events %>% filter(name=="patient981_6"
)
rm(list=ls())
library(parallel)
#setwd("/Users/ziluzhou1/Box Sync/today/right-simulation")
setwd("/Users/zilu/Desktop/right-simulation")
source("./analysis/extra-functions.r")
pkg = list("simmer","dplyr","ggplot2","reshape2","tidyr","msm")
invisible(lapply(pkg, require, character.only = TRUE))
####
##
# Set Number of Patients (per iteration)
##
####
vNN = 1250
load("./main/cpi.Rdata")
####
##
# Warfarin Only: Baseline
##
####
Scenario.Name = "Baseline"
env  <- simmer(Scenario.Name)
source("./inputs.R")
inputs$vNIter = 8
inputs$vN = vNN
inputs$vUpperAge    = 65
inputs$vLowerAge    = 65
inputs$vHorizon     = 100
inputs$vReactive = "None"
inputs$vPreemptive = "None"
inputs$vDrugs       = list(vSimvastatin = FALSE,
vWarfarin = TRUE,
vClopidogrel = FALSE)
source("./right-main-simulation-parallel.R")
source('./main/event_main_loop.R')
s = 12345
ptm <- proc.time()
env  = exec.simulation(s=s)
arrivals  <- get_mon_arrivals(env, per_resource = T) %>%  mutate(name = paste0(name,"_",replication))
attributes <- arrange(get_mon_attributes(env),name,key,time) %>%  mutate(name = paste0(name,"_",replication))
first.attributes <- spread(attributes %>% group_by(name,key) %>% summarize(first = first(value)),key,first)
last.attributes <- spread(attributes %>% group_by(name,key) %>% summarize(last = last(value)),key,last)
#all.attributes <- spread(attributes %>% group_by(name,key,time) %>% summarize(first = mean(value)),key,first)
events %>% filter(name=="patient981_6")
source("./costs.R")
run.stats = cost.qaly(env,inputs)
events = run.stats[["arrivals"]] %>% arrange(start_time,end_time)
events  %>% filter(name %in% c("patient0_1","patient0_8")) %>% arrange(name)
events %>% filter(name=="patient981_6")
rm(list=ls())
library(parallel)
#setwd("/Users/ziluzhou1/Box Sync/today/right-simulation")
setwd("/Users/zilu/Desktop/right-simulation")
source("./analysis/extra-functions.r")
pkg = list("simmer","dplyr","ggplot2","reshape2","tidyr","msm")
invisible(lapply(pkg, require, character.only = TRUE))
####
##
# Set Number of Patients (per iteration)
##
####
vNN = 1250
load("./main/cpi.Rdata")
####
##
# Warfarin Only: Baseline
##
####
Scenario.Name = "Baseline"
env  <- simmer(Scenario.Name)
source("./inputs.R")
inputs$vNIter = 8
inputs$vN = vNN
inputs$vUpperAge    = 65
inputs$vLowerAge    = 65
inputs$vHorizon     = 100
inputs$vReactive = "None"
inputs$vPreemptive = "None"
inputs$vDrugs       = list(vSimvastatin = FALSE,
vWarfarin = TRUE,
vClopidogrel = FALSE)
source("./right-main-simulation-parallel.R")
source('./main/event_main_loop.R')
s = 12345
ptm <- proc.time()
env  = exec.simulation(s=s)
arrivals  <- get_mon_arrivals(env, per_resource = T) %>%  mutate(name = paste0(name,"_",replication))
attributes <- arrange(get_mon_attributes(env),name,key,time) %>%  mutate(name = paste0(name,"_",replication))
first.attributes <- spread(attributes %>% group_by(name,key) %>% summarize(first = first(value)),key,first)
last.attributes <- spread(attributes %>% group_by(name,key) %>% summarize(last = last(value)),key,last)
#all.attributes <- spread(attributes %>% group_by(name,key,time) %>% summarize(first = mean(value)),key,first)
source("./costs.R")
run.stats = cost.qaly(env,inputs)
events = run.stats[["arrivals"]] %>% arrange(start_time,end_time)
#events  %>% filter(name %in% c("patient0_1","patient0_8")) %>% arrange(name)
events %>% filter(name=="patient981_6")
events %>% count(resource) %>% data.frame()
events %>% filter(name=="patient1091_4")
events %>% filter(name=="patient630_1")
events %>% filter(name=="patient963_6")
events %>% filter(name=="patient955_6")
events %>% filter(name=="patient900_6")
events %>% filter(name=="patient900_5")
inv <- events %>% filter(resource=="in_range")
table(inv$activity_time)
View(inv)
rm(list=ls())
library(parallel)
#setwd("/Users/ziluzhou1/Box Sync/today/right-simulation")
setwd("/Users/zilu/Desktop/right-simulation")
source("./analysis/extra-functions.r")
pkg = list("simmer","dplyr","ggplot2","reshape2","tidyr","msm")
invisible(lapply(pkg, require, character.only = TRUE))
####
##
# Set Number of Patients (per iteration)
##
####
vNN = 1250
load("./main/cpi.Rdata")
####
##
# Warfarin Only: Baseline
##
####
Scenario.Name = "Baseline"
env  <- simmer(Scenario.Name)
source("./inputs.R")
inputs$vNIter = 8
inputs$vN = vNN
inputs$vUpperAge    = 65
inputs$vLowerAge    = 65
inputs$vHorizon     = 100
inputs$vReactive = "None"
inputs$vPreemptive = "None"
inputs$vDrugs       = list(vSimvastatin = FALSE,
vWarfarin = TRUE,
vClopidogrel = FALSE)
source("./right-main-simulation-parallel.R")
source('./main/event_main_loop.R')
s = 12345
ptm <- proc.time()
env  = exec.simulation(s=s)
arrivals  <- get_mon_arrivals(env, per_resource = T) %>%  mutate(name = paste0(name,"_",replication))
attributes <- arrange(get_mon_attributes(env),name,key,time) %>%  mutate(name = paste0(name,"_",replication))
first.attributes <- spread(attributes %>% group_by(name,key) %>% summarize(first = first(value)),key,first)
last.attributes <- spread(attributes %>% group_by(name,key) %>% summarize(last = last(value)),key,last)
#all.attributes <- spread(attributes %>% group_by(name,key,time) %>% summarize(first = mean(value)),key,first)
source("./costs.R")
run.stats = cost.qaly(env,inputs)
events = run.stats[["arrivals"]] %>% arrange(start_time,end_time)
#events  %>% filter(name %in% c("patient0_1","patient0_8")) %>% arrange(name)
events %>% filter(name=="patient981_6")
events %>% count(resource) %>% data.frame()
rm(list=ls())
library(parallel)
#setwd("/Users/ziluzhou1/Box Sync/today/right-simulation")
setwd("/Users/zilu/Desktop/right-simulation")
source("./analysis/extra-functions.r")
pkg = list("simmer","dplyr","ggplot2","reshape2","tidyr","msm")
invisible(lapply(pkg, require, character.only = TRUE))
####
##
# Set Number of Patients (per iteration)
##
####
vNN = 1250
load("./main/cpi.Rdata")
####
##
# Warfarin Only: Baseline
##
####
Scenario.Name = "Baseline"
env  <- simmer(Scenario.Name)
source("./inputs.R")
inputs$vNIter = 8
inputs$vN = vNN
inputs$vUpperAge    = 65
inputs$vLowerAge    = 65
inputs$vHorizon     = 100
inputs$vReactive = "None"
inputs$vPreemptive = "None"
inputs$vDrugs       = list(vSimvastatin = FALSE,
vWarfarin = TRUE,
vClopidogrel = FALSE)
source("./right-main-simulation-parallel.R")
source('./main/event_main_loop.R')
s = 12345
ptm <- proc.time()
env  = exec.simulation(s=s)
arrivals  <- get_mon_arrivals(env, per_resource = T) %>%  mutate(name = paste0(name,"_",replication))
attributes <- arrange(get_mon_attributes(env),name,key,time) %>%  mutate(name = paste0(name,"_",replication))
first.attributes <- spread(attributes %>% group_by(name,key) %>% summarize(first = first(value)),key,first)
last.attributes <- spread(attributes %>% group_by(name,key) %>% summarize(last = last(value)),key,last)
#all.attributes <- spread(attributes %>% group_by(name,key,time) %>% summarize(first = mean(value)),key,first)
source("./costs.R")
run.stats = cost.qaly(env,inputs)
events = run.stats[["arrivals"]] %>% arrange(start_time,end_time)
#events  %>% filter(name %in% c("patient0_1","patient0_8")) %>% arrange(name)
events %>% filter(name=="patient981_6")
3+1.95
1/4.95
1/4.95*1.95
p <- c(0.038, 0.158, 0.993)
p/4.95*1.95
p/4*1.95
p/4*1.95*6.5
p/4.95*1.95*6.5
